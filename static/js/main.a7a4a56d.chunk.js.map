{"version":3,"sources":["Web3Util.js","images/nfts/1.png","images/nfts/2.png","images/nfts/3.png","images/nfts/4.png","images/nfts/5.png","components/RuneImageComponent.js","components/currencyUtils.js","MarketPlaceHome.js","components/MyRunesComponent.js","MyRunes.js","components/ClaimedRunesComponent.js","ClaimedRunes.js","RuneDetail.js","Details.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","a","window","ethereum","web3","Web3","enable","console","log","process","provider","providers","HttpProvider","getInstance","eth","net","getId","networkId","getAccounts","user","deployedNetwork","MarketPlace","networks","instance","Contract","abi","address","from","COLOR_ARRAY","ISPROD","RuneImageComponent","props","state","getRuneImage","bind","rune","chosenModel","runeId","Number","parseInt","colorString","height","width","imageEdges","divWidth","undefined","this","isDetail","location","href","indexOf","nft1","nft2","nft3","nft4","nft5","filterString","temp","temp2","style","margin","dangerouslySetInnerHTML","__html","className","src","React","Component","getCurrencyTokenName","currency","RUNE_PRICES","MarketPlaceHome","componentDidMount","contractInstance","setState","hasData","LoadData","message","claimFreeNFT","claimPayedNFT","getClaimRunesComponent","scrollTo","methods","runesRemainingToAssign","call","balanceOf","myRuneCounter","getAllRunesAtAddress","myRunes","claimFreeRunes","send","cost","priceInWei","utils","toWei","claimPayedRunes","value","component","push","onClick","tempId","to","length","class","MyRunesComponent","getRunesComponent","components","counter","display","float","MyRunes","textAlign","ClaimedRunesComponent","claimedRunes","ClaimedRunes","RuneDetail","componentDidUpdate","runeOwner","runeIndexToAddress","match","params","Details","Routes","exact","path","render","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7a4a56d.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport MarketPlace from './abi/MarketPlace.json'\r\n\r\nexport const getWeb3 = () =>\r\n    new Promise(async(resolve, reject) => {\r\n    //window.addEventListener(\"load\", async () => {\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n        await window.ethereum.enable();\r\n        resolve(web3);\r\n        } catch (error) {\r\n        reject(error);\r\n        }\r\n    } else if (window.web3) {\r\n        // load metamask provider\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n    } else {\r\n        console.log(process.env.PUBLIC_URL)\r\n        const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n    }\r\n    //});\r\n});\r\nexport const getInstance = async (web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const deployedNetwork = MarketPlace.networks[networkId];\r\n    \r\n    window.instance = new web3.eth.Contract(\r\n        MarketPlace.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n        {\r\n            from: window.user\r\n        }\r\n    );\r\n\r\n    return window.instance;\r\n}","export default __webpack_public_path__ + \"static/media/1.7af21f0f.png\";","export default __webpack_public_path__ + \"static/media/2.d057f409.png\";","export default __webpack_public_path__ + \"static/media/3.02257d75.png\";","export default __webpack_public_path__ + \"static/media/4.0ff827e2.png\";","export default __webpack_public_path__ + \"static/media/5.3261d6de.png\";","import React from 'react';\r\nimport nft1 from '../images/nfts/1.png';\r\nimport nft2 from '../images/nfts/2.png';\r\nimport nft3 from '../images/nfts/3.png';\r\nimport nft4 from '../images/nfts/4.png';\r\nimport nft5 from '../images/nfts/5.png';\r\n\r\nconst COLOR_ARRAY = [\r\n  95,\r\n  162,\r\n  19,\r\n  70,\r\n  213,\r\n  110,\r\n  161,\r\n  316,\r\n  84,\r\n  176,\r\n  189,\r\n  324,\r\n  232,\r\n  231,\r\n  135,\r\n  62,\r\n  304,\r\n  318,\r\n  223,\r\n  127,\r\n  245,\r\n  295,\r\n  97,\r\n  31,\r\n  112,\r\n  146,\r\n  296,\r\n  260,\r\n  302,\r\n  352,\r\n  18,\r\n  274,\r\n  179,\r\n  197,\r\n  108,\r\n  281,\r\n  173,\r\n  343,\r\n  349,\r\n  216,\r\n  132,\r\n  148,\r\n  10,\r\n  222,\r\n  38,\r\n  49,\r\n  285,\r\n  298,\r\n  228,\r\n  94,\r\n  286,\r\n  75,\r\n  51,\r\n  278,\r\n  29,\r\n  306,\r\n  169,\r\n  142,\r\n  315,\r\n  154,\r\n  265,\r\n  244,\r\n  273,\r\n  212,\r\n  77,\r\n  192,\r\n  36,\r\n  226,\r\n  106,\r\n  72,\r\n  16,\r\n  115,\r\n  69,\r\n  172,\r\n  282,\r\n  9,\r\n  32,\r\n  123,\r\n  261,\r\n  323,\r\n  220,\r\n  355,\r\n  113,\r\n  140,\r\n  271,\r\n  184,\r\n  185,\r\n  307,\r\n  360,\r\n  124,\r\n  256,\r\n  143,\r\n  65,\r\n  83,\r\n  46,\r\n  114,\r\n  1,\r\n  168,\r\n  25,\r\n  183,\r\n  326\r\n]\r\n\r\nlet ISPROD = true\r\nclass RuneImageComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      props\r\n    }\r\n    this.getRuneImage = this.getRuneImage.bind(this);\r\n  }\r\n\r\n  getRuneImage(rune){\r\n\r\n    let runeId = Number.parseInt(rune)\r\n    let colorString = \"\"\r\n    let height =\"50\"\r\n    let width = \"auto\"\r\n    let imageEdges = \" image-rendering: pixelated;object-fit: contain;\"\r\n\r\n    let divWidth = \"90px\"\r\n    if(this.props.divWidth != undefined){\r\n      divWidth = this.props.divWidth\r\n    }\r\n\r\n    if(this.props.height != undefined &&\r\n      this.props.width != undefined){\r\n        height = this.props.height \r\n        width = this.props.height \r\n    }\r\n\r\n    if(!this.props.isDetail){\r\n      imageEdges = \"\"\r\n    }\r\n    \r\n  \r\n\r\n    if (window.location.href.indexOf(\"localhost\") != -1){\r\n      ISPROD = false\r\n    }\r\n    \r\n    let chosenModel;\r\n    if(runeId<100){\r\n      chosenModel = nft1\r\n      colorString = COLOR_ARRAY[runeId]\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/1.png\"\r\n      }\r\n    }\r\n    else if(runeId>=100 && runeId<200){\r\n      chosenModel = nft2\r\n      colorString = COLOR_ARRAY[runeId-100]\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/2.png\"\r\n      }\r\n    }else if(runeId>=200 && runeId<300){\r\n      chosenModel = nft3\r\n      colorString = COLOR_ARRAY[runeId-200]\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/3.png\"\r\n      }\r\n    }\r\n    else if(runeId>=300 && runeId<400){\r\n      chosenModel = nft4\r\n      colorString = COLOR_ARRAY[runeId-300]\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/4.png\"\r\n      }\r\n    }\r\n    else if(runeId>=400 && runeId<512){\r\n      chosenModel = nft5\r\n      colorString = COLOR_ARRAY[runeId-400]\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/5.png\"\r\n      }\r\n    }\r\n\r\n\r\n    let filterString = 'filter:hue-rotate('+colorString+'deg);'\r\n    // if dark rune\r\n    if(runeId>=500){\r\n      let temp = 600 - runeId\r\n      let temp2 = temp - 13\r\n      temp = temp *13\r\n      filterString = 'filter:hue-rotate('+COLOR_ARRAY[temp2]+'deg) invert(100%);'\r\n    }\r\n\r\n    // if black and white rune\r\n    if(runeId==500){\r\n      chosenModel = nft1\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/1.png\"\r\n      }\r\n      filterString = 'filter: grayscale(100%)  invert(0%);'\r\n    }\r\n    if(runeId==501){\r\n      chosenModel = nft2\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/2.png\"\r\n      }\r\n      filterString = 'filter: grayscale(100%)  invert(0%);'\r\n    }\r\n    else if(runeId==502){\r\n      chosenModel = nft3\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/3.png\"\r\n      }\r\n      filterString = 'filter: grayscale(100%)  invert(0%);'\r\n    }\r\n\r\n    else if(runeId==503){\r\n      chosenModel = nft4\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/4.png\"\r\n      }\r\n      filterString = 'filter: grayscale(100%)  invert(0%);'\r\n    }\r\n\r\n    else if(runeId==504){\r\n      chosenModel = nft5\r\n      if(ISPROD){\r\n        chosenModel = \"/demo/images/nfts/5.png\"\r\n      }\r\n      filterString = 'filter: grayscale(100%)  invert(0%);'\r\n    }\r\n\r\n    function createMarkup() { return {__html: '<style> .nft'+runeId+'{'+filterString+'image-rendering: auto;image-rendering: crisp-edges;'+imageEdges+' }</style>'}; };\r\n\r\n    return(\r\n      <div style={{width:divWidth,margin:\"auto\"}} >\r\n        <div dangerouslySetInnerHTML={createMarkup()} />\r\n        <img  className={\"nft\"+runeId} src={chosenModel} height={height} width={width} />\r\n      </div>\r\n    ) \r\n  }\r\n\r\n\r\n  render() {\r\n    let runeId = Number.parseInt(this.props.runeId)\r\n\r\n    if (runeId>=0) {\r\n      return (\r\n       this.getRuneImage(runeId)\r\n      );\r\n    } \r\n    \r\n    return null;\r\n\r\n  }\r\n}\r\n\r\nexport default RuneImageComponent;\r\n","function getCurrencyTokenName(networkId){\r\n    let currency = \"\"\r\n    if(networkId ==\"1\"){\r\n      currency = \"$AVAX\"\r\n    }else if(networkId == \"97\"){\r\n      currency = \"$BNB\"\r\n    }\r\n    return currency;\r\n}\r\n\r\nexport default getCurrencyTokenName;","import React from 'react';\r\nimport './App.css';\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport { Link} from \"react-router-dom\";\r\nimport RuneImageComponent from \"./components/RuneImageComponent\"\r\nimport getCurrencyTokenName from \"./components/currencyUtils\"\r\n\r\nconst TOTAL_SUPPLY = 511\r\nconst RUNE_PRICES = [0,0.75,1.5,3,6,12]\r\n\r\nclass MarketPlaceHome extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      user: '',\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:\"\",\r\n      runesRemainingToAssign:0,\r\n      myRuneCounter:0,\r\n      myRunes:[]\r\n    };\r\n    this.LoadData = this.LoadData.bind(this);\r\n    this.claimFreeNFT = this.claimFreeNFT.bind(this);\r\n    this.claimPayedNFT = this.claimPayedNFT.bind(this);\r\n    this.getClaimRunesComponent = this.getClaimRunesComponent.bind(this);\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    this.setState({ user: window.user,hasData:true,contractInstance,networkId });\r\n    \r\n    await this.LoadData(web3);\r\n\r\n  }\r\n  async LoadData() {\r\n      try {\r\n\r\n       const runesRemainingToAssign = await this.state.contractInstance.methods.runesRemainingToAssign().call();\r\n       const myRuneCounter = await this.state.contractInstance.methods.balanceOf(this.state.user).call();\r\n       const myRunes = await this.state.contractInstance.methods.getAllRunesAtAddress(this.state.user).call();\r\n\r\n        this.setState({\r\n          runesRemainingToAssign,\r\n          myRuneCounter,\r\n          myRunes\r\n        })\r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  async claimFreeNFT() {\r\n    try {\r\n      await this.state.contractInstance.methods.claimFreeRunes().send()\r\n      await this.LoadData(window.web3);\r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  async claimPayedNFT(cost) {\r\n    try {\r\n     const priceInWei =  window.web3.utils.toWei(cost, 'ether');\r\n     await this.state.contractInstance.methods.claimPayedRunes().send(\r\n      { value:priceInWei}\r\n     )\r\n      await this.LoadData(window.web3);\r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  getClaimRunesComponent(){\r\n    let component = []\r\n\r\n    let networkId = this.state.networkId\r\n    let currency = getCurrencyTokenName(networkId)\r\n\r\n\r\n    if(this.state.runesRemainingToAssign<=TOTAL_SUPPLY){\r\n      if(this.state.runesRemainingToAssign>411){\r\n        component.push(\r\n          <a href=\"#\" onClick={this.claimFreeNFT}>\r\n            Claim your rune for 0.00 {currency}\r\n          </a>\r\n        )\r\n      }else if(this.state.runesRemainingToAssign<=411 &&this.state.runesRemainingToAssign>= 311){\r\n        component.push(\r\n          <a href=\"#\"  onClick={()=>{this.claimPayedNFT(\"0.75\")}}>\r\n            Claim your rune for {RUNE_PRICES[1]} {currency}\r\n          </a>\r\n        )\r\n      }else if(this.state.runesRemainingToAssign<311 &&this.state.runesRemainingToAssign>= 211){\r\n        component.push(\r\n          <a href=\"#\"  onClick={()=>{this.claimPayedNFT(\"1.5\")}}>\r\n            Claim your rune for {RUNE_PRICES[2]} {currency}\r\n          </a>\r\n        )\r\n      }else if(this.state.runesRemainingToAssign<211 &&this.state.runesRemainingToAssign>= 111){\r\n        component.push(\r\n          <a href=\"#\" onClick={()=>{this.claimPayedNFT(\"3\")}}>\r\n            Claim your rune for {RUNE_PRICES[3]} {currency}\r\n          </a>\r\n        )\r\n      }else if(this.state.runesRemainingToAssign<111 &&this.state.runesRemainingToAssign>= 11){\r\n        component.push(\r\n          <a href=\"#\" onClick={()=>{this.claimPayedNFT(\"6\")}}>\r\n            Claim your rune for {RUNE_PRICES[4]} {currency}\r\n          </a>\r\n        )\r\n      }else if(this.state.runesRemainingToAssign<11 &&this.state.runesRemainingToAssign> 0){\r\n        component.push(\r\n          <a href=\"#\"  onClick={()=>{this.claimPayedNFT(\"12\")}}>\r\n            Claim your rune for {RUNE_PRICES[5]} {currency}\r\n          </a>\r\n        )\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return component;\r\n  }\r\n\r\n  render() {\r\n    let tempId = 510-this.state.runesRemainingToAssign\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\"   >\r\n          <section >\r\n            <div >\r\n              <div>\r\n           \r\n              <br/>\r\n              <h1>Runes to be claimed: {this.state.runesRemainingToAssign}</h1>\r\n              <br/>\r\n\r\n              {(this.state.runesRemainingToAssign <511 )&& (this.state.runesRemainingToAssign >0)?\r\n              \r\n              <div>\r\n                <h2>Last claimed rune: </h2><br/>\r\n                <Link to={\"/rune/\"+tempId} > <RuneImageComponent isDetail={true} runeId={tempId} divWidth={\"225px\"} height={\"250\"} width={\"auto\"} /> </Link>\r\n\r\n              </div>\r\n              \r\n              :null}\r\n              \r\n\r\n\r\n              {this.getClaimRunesComponent()}\r\n          \r\n              <br /> <br /> <br />\r\n              Go to <Link to=\"/myRunes\" >my runes ({this.state.myRunes.length}) </Link>page\r\n\r\n              <br />\r\n\r\n              Go to <Link to=\"/claimed\" >claimed runes ({511 - this.state.runesRemainingToAssign}) </Link>page\r\n              <br />\r\n\r\n                Go to <Link to=\"/details\" >details</Link> page\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" >\r\n          <section >\r\n          <div class=\"sk-folding-cube\">\r\n  <div class=\"sk-cube1 sk-cube\"></div>\r\n  <div class=\"sk-cube2 sk-cube\"></div>\r\n  <div class=\"sk-cube4 sk-cube\"></div>\r\n  <div class=\"sk-cube3 sk-cube\"></div>\r\n</div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default MarketPlaceHome;\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport RuneImageComponent from \"./RuneImageComponent\"\r\n\r\nclass MyRunesComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      props\r\n    }\r\n    this.getRunesComponent = this.getRunesComponent.bind(this);\r\n  }\r\n\r\n  getRunesComponent(myRunes){\r\n    let components = []\r\n\r\n    for(let counter=0;counter<myRunes.length;++counter){\r\n        components.push(\r\n            <Link to={\"/rune/\"+myRunes[counter]} style={{display:\"table\",float:\"left\",margin:\"15px\"}}>\r\n              <RuneImageComponent isDetail={false}  runeId={myRunes[counter]} />\r\n              <br />\r\n               Rune #{myRunes[counter]}\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    return components\r\n  }\r\n\r\n  render() {\r\n    if (this.props.myRunes.length >0) {\r\n      return (\r\n        <div    >\r\n          <section >\r\n            <div >\r\n                <div style={{margin:\"auto\",width:\"500px\"}}>\r\n                {this.getRunesComponent(this.props.myRunes)}\r\n                </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } \r\n    \r\n    return null;\r\n\r\n  }\r\n}\r\n\r\nexport default MyRunesComponent;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport MyRunesComponent from \"./components/MyRunesComponent\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\nclass MyRunes extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      user: '',\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:\"\",\r\n      runesRemainingToAssign:0,\r\n      myRuneCounter:0,\r\n      myRunes:[]\r\n    };\r\n    this.LoadData = this.LoadData.bind(this);\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    this.setState({ user: window.user,hasData:true,contractInstance,networkId });\r\n    \r\n    await this.LoadData(web3);\r\n\r\n  }\r\n  async LoadData() {\r\n      try {\r\n\r\n       const runesRemainingToAssign = await this.state.contractInstance.methods.runesRemainingToAssign().call();\r\n       const myRuneCounter = await this.state.contractInstance.methods.balanceOf(this.state.user).call();\r\n       const myRunes = await this.state.contractInstance.methods.getAllRunesAtAddress(this.state.user).call();\r\n       \r\n        this.setState({\r\n          runesRemainingToAssign,\r\n          myRuneCounter,\r\n          myRunes\r\n        })\r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\"   >\r\n          <section >\r\n            <div >\r\n              <div>\r\n              <h1>My runes ({this.state.myRunes.length})</h1>\r\n           \r\n              <br/>\r\n\r\n              <div>\r\n              <MyRunesComponent myRunes={this.state.myRunes} />\r\n\r\n              </div>\r\n            \r\n              <br/><br/><br/>\r\n              <div style={{textAlign:\"center\",width:\"100vw\",float:\"left\"}}>\r\n                <Link to=\"/\">go back to homepage</Link>\r\n              </div>\r\n\r\n\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" >\r\n          <section >\r\n          <div class=\"sk-folding-cube\">\r\n  <div class=\"sk-cube1 sk-cube\"></div>\r\n  <div class=\"sk-cube2 sk-cube\"></div>\r\n  <div class=\"sk-cube4 sk-cube\"></div>\r\n  <div class=\"sk-cube3 sk-cube\"></div>\r\n</div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default MyRunes;\r\n","import React from 'react';\r\n\r\nimport RuneImageComponent from \"./RuneImageComponent\"\r\nimport { Link} from \"react-router-dom\";\r\n\r\nclass ClaimedRunesComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      props\r\n    }\r\n    this.getRunesComponent = this.getRunesComponent.bind(this);\r\n  }\r\n\r\n  getRunesComponent(runesRemainingToAssign){\r\n    let components = []\r\n    let claimedRunes = 511- runesRemainingToAssign\r\n    for(let counter=0;counter<claimedRunes;++counter){\r\n        components.push(\r\n            <Link to={\"/rune/\"+counter} style={{display:\"table\",float:\"left\",margin:\"15px\",width:\"90px\"}}>\r\n              <RuneImageComponent isDetail={false}  runeId={counter} />\r\n              <br />\r\n               Rune #{counter}\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    return components\r\n  }\r\n\r\n  render() {\r\n    if (this.props.runesRemainingToAssign >=0) {\r\n      return (\r\n        <div    >\r\n          <section >\r\n            <div >\r\n                <h1>Claimed runes ({511 - this.props.runesRemainingToAssign})</h1>\r\n                \r\n                <div style={{margin:\"auto\",width:\"500px\"}}>\r\n                {this.getRunesComponent(this.props.runesRemainingToAssign)}\r\n                </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else{\r\n      return <> No Runes were claimed</>\r\n    }\r\n    \r\n    return null;\r\n\r\n  }\r\n}\r\n\r\nexport default ClaimedRunesComponent;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport ClaimedRunesComponent from \"./components/ClaimedRunesComponent\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\nclass ClaimedRunes extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      user: '',\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:\"\",\r\n      runesRemainingToAssign:0,\r\n      myRuneCounter:0,\r\n      myRunes:[]\r\n    };\r\n    this.LoadData = this.LoadData.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    this.setState({ user: window.user,hasData:true,contractInstance,networkId });\r\n    \r\n    await this.LoadData(web3);\r\n\r\n  }\r\n  async LoadData() {\r\n      try {\r\n\r\n       const runesRemainingToAssign = await this.state.contractInstance.methods.runesRemainingToAssign().call();\r\n       const myRuneCounter = await this.state.contractInstance.methods.balanceOf(this.state.user).call();\r\n       const myRunes = await this.state.contractInstance.methods.getAllRunesAtAddress(this.state.user).call();\r\n       \r\n        this.setState({\r\n          runesRemainingToAssign,\r\n          myRuneCounter,\r\n          myRunes\r\n        })\r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  render() {\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\">\r\n          <section >\r\n            <div >\r\n              <div>\r\n           \r\n              <br/>\r\n              <ClaimedRunesComponent runesRemainingToAssign={this.state.runesRemainingToAssign} />\r\n              <br/><br/><br/>\r\n              <div style={{textAlign:\"center\",width:\"100vw\",float:\"left\"}}>\r\n                <Link to=\"/\">go back to homepage</Link>\r\n              </div>\r\n\r\n\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" >\r\n          <section >\r\n          <div class=\"loader\" />\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default ClaimedRunes;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\nimport RuneImageComponent from \"./components/RuneImageComponent\"\r\n\r\n\r\nclass RuneDetail extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      user: '',\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:\"\",\r\n      runesRemainingToAssign:0,\r\n      myRuneCounter:0,\r\n      myRunes:[],\r\n      runeOwner:\"\"\r\n    };\r\n    this.LoadData = this.LoadData.bind(this);\r\n\r\n  }\r\n\r\n  componentDidUpdate = async () => {\r\n    const web3 = await getWeb3();\r\n \r\n    \r\n    await this.LoadData(web3);\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    this.setState({ user: window.user,hasData:true,contractInstance,networkId,runeOwner:\"\"});\r\n    \r\n    await this.LoadData(web3);\r\n\r\n  }\r\n  async LoadData() {\r\n      try {\r\n\r\n       const runesRemainingToAssign = await this.state.contractInstance.methods.runesRemainingToAssign().call();\r\n       const myRuneCounter = await this.state.contractInstance.methods.balanceOf(this.state.user).call();\r\n       const myRunes = await this.state.contractInstance.methods.getAllRunesAtAddress(this.state.user).call();\r\n       const runeOwner = await this.state.contractInstance.methods.runeIndexToAddress(this.props.match.params.runeId).call();\r\n\r\n        this.setState({\r\n          runesRemainingToAssign,\r\n          myRuneCounter,\r\n          myRunes,\r\n          runeOwner\r\n        })\r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  render() {\r\n    if (this.state.hasData) {\r\n      let tempId =  this.props.match.params.runeId -510\r\n      if(tempId<0){\r\n        tempId = tempId*(-1)\r\n      }\r\n      return (\r\n        <div className=\"App\"   >\r\n          <section >\r\n            <div >\r\n              <div>\r\n              <h1>\r\n                Rune ID: {this.props.match.params.runeId}\r\n              </h1>\r\n\r\n\r\n              {this.state.runesRemainingToAssign <= tempId?\r\n              <>\r\n                Rune owner: {this.state.runeOwner}\r\n              </>\r\n              :\r\n              <div>\r\n              \r\n              </div>\r\n              }\r\n              {this.state.runesRemainingToAssign <= tempId?\r\n              \r\n              <RuneImageComponent isDetail={true} runeId={this.props.match.params.runeId} divWidth={\"225px\"} height={\"250\"} width={\"auto\"} />:\r\n              <div>\r\n               Rune not yet claimed\r\n              </div>\r\n              }\r\n             <br/><br/><br/>\r\n              <Link to=\"/\">go back to the homepage</Link>\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" >\r\n          <section >\r\n          <div class=\"sk-folding-cube\">\r\n  <div class=\"sk-cube1 sk-cube\"></div>\r\n  <div class=\"sk-cube2 sk-cube\"></div>\r\n  <div class=\"sk-cube4 sk-cube\"></div>\r\n  <div class=\"sk-cube3 sk-cube\"></div>\r\n</div>          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default RuneDetail;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport getCurrencyTokenName from \"./components/currencyUtils\"\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\n\r\nclass Details extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      user: '',\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:\"\",\r\n      runesRemainingToAssign:0,\r\n      myRuneCounter:0,\r\n      myRunes:[]\r\n    };\r\n    this.LoadData = this.LoadData.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    this.setState({ user: window.user,hasData:true,contractInstance,networkId });\r\n    \r\n    await this.LoadData(web3);\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  async LoadData() {\r\n      try {\r\n\r\n       const runesRemainingToAssign = await this.state.contractInstance.methods.runesRemainingToAssign().call();\r\n       const myRuneCounter = await this.state.contractInstance.methods.balanceOf(this.state.user).call();\r\n       const myRunes = await this.state.contractInstance.methods.getAllRunesAtAddress(this.state.user).call();\r\n\r\n        this.setState({\r\n          runesRemainingToAssign,\r\n          myRuneCounter,\r\n          myRunes\r\n        })\r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n\r\n  render() {\r\n    let currency = getCurrencyTokenName(this.state.networkId)\r\n\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\"   >\r\n          <section >\r\n            <div >\r\n              <div>\r\n              <h1>\r\n                About Crypto Runes\r\n              </h1>\r\n           \r\n              <br />\r\n              Claim your rare Rune NFT on Avalanche and Binance Smart Chain.\r\n              <br/>\r\n              There are 5 tiers of runes and each one of them has an algorithmically generated color.\r\n\r\n              <br /><br/><br/>\r\n              <h2>Rune prices:</h2><br/><br/>\r\n              Tier 1 - the first one hundred NFTs: are free (only pays gas fees)<br/><br/>\r\n              Tier 2 - the following one hundred NFTs: 0,75 {currency}<br/><br/>\r\n              Tier 3 - the following one hundred NFTs: 1,5 {currency}<br/><br/>\r\n              Tier 4 - the following one hundred NFTs: 3 {currency}<br/><br/>\r\n              Tier 5 - the following one hundred NFTs: 6 {currency}<br/><br/>\r\n              Tier 6 - the last eleven NFTs: 12 {currency} <br/><br/>\r\n              <h2>Rune marketplace:</h2><br/><br/>\r\n              Coming soon.\r\n              <br/><br/><br/>\r\n              Go back to the <Link to=\"/\">homepage</Link>\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" >\r\n          <section >\r\n          <div class=\"sk-folding-cube\">\r\n  <div class=\"sk-cube1 sk-cube\"></div>\r\n  <div class=\"sk-cube2 sk-cube\"></div>\r\n  <div class=\"sk-cube4 sk-cube\"></div>\r\n  <div class=\"sk-cube3 sk-cube\"></div>\r\n</div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport {  Route, Switch,HashRouter} from \"react-router-dom\";\r\n\r\nimport MarketPlaceHome from './MarketPlaceHome';\r\nimport MyRunes from './MyRunes';\r\nimport ClaimedRunes from './ClaimedRunes';\r\nimport RuneDetail from './RuneDetail';\r\nimport Details from './Details';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n      <Switch>\r\n        <Route exact  path=\"/\" component={MarketPlaceHome} />\r\n        <Route  path=\"/rune/:runeId\" component={RuneDetail} />\r\n        <Route   path=\"/myRunes\" component={MyRunes} />\r\n        <Route   path=\"/claimed\" component={ClaimedRunes} />\r\n        <Route path=\"/details\" component={Details} />\r\n\r\n      <Route\r\n        render={function() {\r\n          return    <div class=\"sk-folding-cube\">\r\n          <div class=\"sk-cube1 sk-cube\"></div>\r\n          <div class=\"sk-cube2 sk-cube\"></div>\r\n          <div class=\"sk-cube4 sk-cube\"></div>\r\n          <div class=\"sk-cube3 sk-cube\"></div>\r\n        </div>\r\n          ;\r\n        }}\r\n      />\r\n    </Switch></HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"../node_modules/react\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router } from \"../node_modules/react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n     \r\n\r\n      <Router>\r\n      <div>\r\n        <main>\r\n        <Routes />\r\n        </main>\r\n      </div>\r\n      </Router>\r\n    \r\n\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}